import { JobsOptions, RedisJobOptions } from 'bullmq';
/**
 * @see {@link bullmq!JobsOptions | JobsOptions}
 */
export interface JobsProOptions extends JobsOptions {
    /**
     * A queue can be divided into an unlimited amount of groups that can be defined
     * dynamically as jobs are being added to a queue.
     *
     * The group option allows you to specify the unique group Id where the given job will belong to,
     * and processed according to group mechanics.
     *
     * For more information about groups @see https://docs.bullmq.io/bullmq-pro/groups
     */
    group?: {
        /**
         * The group id. If the group does not exist it will be created.
         * (When the group becomes empty it will be deleted automatically)
         */
        id: string;
        /**
         * The maximum number of jobs that can be added to a group.
         * If the limit has been reached an error with the type `GroupMaxSizeExceededError` will be thrown.
         */
        maxSize?: number;
        /**
         * Ranges from 1 (highest priority) to 2 097 152 (lowest priority). Note that
         * using priorities has a slight impact on performance,
         * so do not use it if not required.
         */
        priority?: number;
    };
}
/**
 * These fields are the ones stored in Redis with smaller keys for compactness.
 */
export type RedisJobProOptions = RedisJobOptions & {
    group?: {
        /**
         * The group id. If the group does not exist it will be created.
         * (When the group becomes empty it will be deleted automatically)
         */
        id: string;
        /**
         * The maximum number of jobs that can be added to a group.
         * If the limit has been reached an error with the type `GroupMaxSizeExceededError` will be thrown.
         */
        maxSize?: number;
        /**
         * Ranges from 1 (highest priority) to 2 097 152 (lowest priority). Note that
         * using priorities has a slight impact on performance,
         * so do not use it if not required.
         */
        priority?: number;
    };
};
