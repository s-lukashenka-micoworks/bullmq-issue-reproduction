--[[
  Moves job from active to waiting children set.

  Input:
    KEYS[1] prefix key
    KEYS[2] lock key
    KEYS[3] active key
    KEYS[4] waitChildrenKey key
    KEYS[5] job key
    KEYS[6] stalled key
    KEYS[7] marker key
    KEYS[8] meta key

    ARGV[1] token
    ARGV[2] child key
    ARGV[3] timestamp
    ARGV[4] the id of the job
    ARGV[5] concurrency
    
  Output:
    0 - OK
    1 - There are not pending dependencies.
   -1 - Missing job.
   -2 - Missing lock
   -3 - Job not in active set
]]
local rcall = redis.call

-- Includes
--- @include "<base>/includes/isQueuePaused"
--- @include "<base>/includes/removeLock"
--- @include "includes/decreaseGroupConcurrency"

local jobKey = KEYS[5]
local workerConcurrency = ARGV[5]

local function moveToWaitingChildren (activeKey, waitingChildrenKey, jobId,
  timestamp, prefix, metaKey, markerKey, groupId, concurrency)
  local score = tonumber(timestamp)
  local paused = isQueuePaused(metaKey)

  local numRemovedElements = rcall("LREM", activeKey, -1, jobId)

  if(numRemovedElements < 1) then
    return -3
  end

  if groupId then
    decreaseGroupConcurrency(prefix, markerKey, paused, groupId,
      tonumber(concurrency or 999999))
  end

  rcall("ZADD", waitingChildrenKey, score, jobId)

  return 0
end

if rcall("EXISTS", jobKey) == 1 then
  local markerKey = KEYS[7]
  local metaKey = KEYS[8]
  if ARGV[2] ~= "" then
    if rcall("SISMEMBER", jobKey .. ":dependencies", ARGV[2]) ~= 0 then
      local errorCode = removeLock(jobKey, KEYS[6], ARGV[1], ARGV[4])
      if errorCode < 0 then
        return errorCode
      end
      local groupId = rcall("HGET", jobKey, "gid")

      return moveToWaitingChildren(KEYS[3], KEYS[4], ARGV[4],
              ARGV[3], KEYS[1], metaKey, markerKey, groupId, workerConcurrency)
    end

    return 1
  else
    if rcall("SCARD", jobKey .. ":dependencies") ~= 0 then 
      local errorCode = removeLock(jobKey, KEYS[6], ARGV[1], ARGV[4])
      if errorCode < 0 then
        return errorCode
      end
      local groupId = rcall("HGET", jobKey, "gid")

      return moveToWaitingChildren(KEYS[3], KEYS[4], ARGV[4],
              ARGV[3], KEYS[1], metaKey, markerKey, groupId, workerConcurrency)
    end

    return 1
  end
end

return -1
