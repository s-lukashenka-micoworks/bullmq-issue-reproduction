--[[
KEYS[1] wait key
KEYS[2] active key
KEYS[3] priority key
KEYS[4] stream events key
KEYS[5] stalled key

-- Rate limiting
KEYS[6] rate limiter key
KEYS[7] delayed key

]]

-- Includes
--- @include "<base>/includes/getRateLimitTTL"
--- @include "fetchNextJob"
-- TODO: Try to get rid of KEYS and use separate parameters instead.
-- TODO: If queue is paused just return 0, 0, 0, 0
local function moveNextBatch(waitKey, activeKey, delayedKey,
                             rateLimiterKey, streamEventsKey, prefixKey, opts,
                             numJobs, timestamp, markerKey, rateLimiterKey,
                             maxJobs, KEYS)
    local lastResult
    local jobs = {}
    local jobIds = {}
    repeat
        local expireTime = getRateLimitTTL(maxJobs, rateLimiterKey)
        if expireTime > 0 then
            lastResult =  {0, 0, expireTime, 0}
        else
            lastResult = fetchNextJob(waitKey, activeKey, delayedKey,
                rateLimiterKey, streamEventsKey, prefixKey,
                opts, timestamp, markerKey, false,
                maxJobs, KEYS, nil, false)
        end

        numJobs = numJobs - 1

        if lastResult[1] ~= 0 then
            table.insert(jobs, lastResult[1])
            table.insert(jobIds, lastResult[2])
        end

    until numJobs <= 0 or lastResult[1] == 0

    return {jobs, jobIds, lastResult[3], lastResult[4]}
end
